--------SUMMARY PROBELMS--------

--1. EJZ274: RETURN COUNT OF FREQUENT FLYERS AND MINIMUM AND HIGHEST MILES BALANCE OF FREQUENT FLYERS
SELECT COUNT(*) AS FREQUENT_FLYER_COUNT, MIN(MILES_BALANCE) AS MIN_MILES, MAX(MILES_BALANCE) AS MAX_MILES
FROM FREQUENT_FLYER_PROFILE; 

--2. EJZ274: RETURN PASSENGER PAYMENT INFORMATION OF THOSE ON FILE
SELECT P.PASSENGER_ID, COUNT(*) AS CARDS_ON_FILE, MAX(EXPIRATION_DATE) AS LATEST_EXP_DATE
FROM PASSENGER P JOIN PASSENGER_PAYMENT PP ON P.PASSENGER_ID = PP.PASSENGER_ID
GROUP BY P.PASSENGER_ID;

--3. EJZ274: RETURNS INFO ABOUT PASSENGERS AND FREQUENT FLYER INFO
SELECT MAILING_CITY, COUNT(*) AS PASSENGER_COUNT, ROUND(AVG(MILES_BALANCE)) AS AVERAGE_MILES_BALANCE
FROM PASSENGER P JOIN FREQUENT_FLYER_PROFILE FFP ON P.PASSENGER_ID = FFP.PASSENGER_ID
GROUP BY MAILING_CITY
ORDER BY AVERAGE_MILES_BALANCE DESC;

--4. EJZ274: RETURNS RESULT OF JOINING FLIGHT AND RESERVATION TABLES
SELECT PASSENGER_ID, TRIP_CONTACT_EMAIL, COUNT(DISTINCT PRFL.FLIGHT_ID) AS FLIGHT_COUNT
FROM FLIGHT 
    JOIN PASS_RESV_FLIGHT_LINKING PRFL ON FLIGHT.FLIGHT_ID = PRFL.FLIGHT_ID
    JOIN RESERVATION ON RESERVATION.RESERVATION_ID = PRFL.RESERVATION_ID
GROUP BY PASSENGER_ID, TRIP_CONTACT_EMAIL
ORDER BY FLIGHT_COUNT DESC; 

-- 5. EJZ274: RETURNS NAME AND VOUCHERS EARNED FOR FREQUENT FLYERS 
SELECT P.FIRST_NAME, P.LAST_NAME, TRUNC((MILES_BALANCE-5000)/10000) AS VOUCHERS_EARNED
FROM PASSENGER P JOIN FREQUENT_FLYER_PROFILE FFP ON P.PASSENGER_ID = FFP.PASSENGER_ID
WHERE TRUNC((MILES_BALANCE-5000)/10000) >= 2
ORDER BY VOUCHERS_EARNED DESC, LAST_NAME DESC;

--- 6. EJZ274: RETURNS SUM OF MILES FOR PASSENGERS WITHOUT GOLD STATUS
SELECT P.FIRST_NAME, P.LAST_NAME, TRUNC((MILES_BALANCE-5000)/10000) AS VOUCHERS_EARNED
FROM PASSENGER P JOIN FREQUENT_FLYER_PROFILE FFP ON P.PASSENGER_ID = FFP.PASSENGER_ID
WHERE FF_LEVEL <> 'G'
ORDER BY VOUCHERS_EARNED DESC, LAST_NAME DESC;

-- 7a. EJZ274: RETURNS A REPORT TO SHOW COUNT OF FLIGHTS BROKEN OUT BY PASSENGER MAILING CITY AND GENDER
SELECT P.MAILING_CITY, P.GENDER, COUNT(DISTINCT FLIGHT_ID) AS FLIGHT_COUNT
FROM PASSENGER P JOIN PASS_RESV_FLIGHT_LINKING PRFL ON P.PASSENGER_ID = PRFL.PASSENGER_ID
WHERE P.MAILING_STATE = 'TX'
GROUP BY ROLLUP(P.MAILING_CITY, P.GENDER)
ORDER BY P.MAILING_CITY;

-- 7b. EJZ274: EXPLAINING HOW CUBE OPERATOR IS DIFFERENT THAN ROLLUP AND WHY IT IS USEFUL
-- The CUBE operator is similar to the ROLLUP function except that the function adds summary rows for every combination of groups specified in the GROUP BY clause. 
-- It also adds a summary row to the end of the result set that summarizes the entire result set. The CUBE function is useful sometimes it does not generate 
-- aggregate results in a hierarchal way. It can provide more aggreagte information than ROLlUP on the columns you have depending on your query needs. 


-- 8. EJZ274: RETURN FLIGHT INFO FOR ALL FLIGHTS THAT HAVE PASSENGERS WITH RESERVATIONS
SELECT FLIGHT_NUMBER, DEPARTURE_CITY, ARRIVAL_CITY, COUNT(DISTINCT PASSENGER_ID) AS UNIQUE_PASSENGERS
FROM FLIGHT JOIN PASS_RESV_FLIGHT_LINKING PRFL ON FLIGHT.FLIGHT_ID = PRFL.FLIGHT_ID
GROUP BY FLIGHT_NUMBER, DEPARTURE_CITY, ARRIVAL_CITY
HAVING COUNT(UNIQUE PASSENGER_ID) >= 2
ORDER BY FLIGHT_NUMBER ASC;


------- SUBQUERY PROBLEMS --------------------

-- 9. EJZ274: RETURNS EMPLOYEE INFO USING SUBQUERY IN WHERE
SELECT DISTINCT EMPLOYEE_ID, FIRST_NAME, LAST_NAME
FROM EMPLOYEE
WHERE EMPLOYEE_ID IN (SELECT ASSIGNED_EMPLOYEE FROM FLIGHT)
ORDER BY EMPLOYEE_ID;

-- 10. EJZ274: RETURNS FREQUENT FLYERS THAT HAVE MILES BALANCE THAT IS GREATER THAN AVERAGE MILES BALANCE
SELECT FREQUENT_FLYER_ID, FF_LEVEL, MILES_BALANCE
FROM FREQUENT_FLYER_PROFILE
WHERE MILES_BALANCE > (SELECT AVG(MILES_BALANCE) 
                       FROM FREQUENT_FLYER_PROFILE)
ORDER BY MILES_BALANCE;

--11. EJZ274: RETURN CUSTOMER CONTACT LIST FOR THOSE WHO HAVEN'T RESERVED A FLIGHT YET
SELECT FIRST_NAME, LAST_NAME, EMAIL, PRIMARY_PHONE, SECONDARY_PHONE, MAILING_CITY
FROM PASSENGER
WHERE PASSENGER_ID NOT IN (SELECT PRFL.PASSENGER_ID 
                           FROM PASS_RESV_FLIGHT_LINKING PRFL LEFT JOIN PASSENGER P
                           ON PRFL.PASSENGER_ID = P.PASSENGER_ID) 
ORDER BY MAILING_CITY;

--12. EJZ274: RETURN PASSENGER AND FLIGHT INFO
SELECT P.PASSENGER_ID, LAST_NAME, FIRST_NAME, COUNT(FLIGHT_ID) AS NUM_FLIGHT, COUNT(SEAT_ASSIGNMENT) AS NUM_SEAT
FROM PASSENGER P JOIN PASS_RESV_FLIGHT_LINKING PRFL ON P.PASSENGER_ID = PRFL.PASSENGER_ID
GROUP BY (P.PASSENGER_ID, LAST_NAME, FIRST_NAME);

SELECT LAST_NAME, FIRST_NAME, (NUM_FLIGHT - NUM_SEAT) AS FLIGHT_NO_SEAT
FROM (SELECT P.PASSENGER_ID, LAST_NAME, FIRST_NAME, COUNT(FLIGHT_ID) AS NUM_FLIGHT, COUNT(SEAT_ASSIGNMENT) AS NUM_SEAT
      FROM PASSENGER P JOIN PASS_RESV_FLIGHT_LINKING PRFL ON P.PASSENGER_ID = PRFL.PASSENGER_ID
      GROUP BY (P.PASSENGER_ID, LAST_NAME, FIRST_NAME))
ORDER BY LAST_NAME;

-- 13. EJZ74: RETURNS RESERVATION INFO THAT DO NOT HAVE THE SAME SEAT NUMBER ASSIGNED FOR A FLIGHT AS ANOTHER RESERVATION
SELECT R.RESERVATION_ID, DATE_BOOKED, SEAT_ASSIGNMENT
FROM RESERVATION R JOIN PASS_RESV_FLIGHT_LINKING PRFL ON R.RESERVATION_ID = PRFL.RESERVATION_ID
WHERE SEAT_ASSIGNMENT IN (SELECT SEAT_ASSIGNMENT
                          FROM (SELECT SEAT_ASSIGNMENT, COUNT(SEAT_ASSIGNMENT) AS SEATS
                                FROM PASS_RESV_FLIGHT_LINKING
                                GROUP BY SEAT_ASSIGNMENT
                                HAVING COUNT(SEAT_ASSIGNMENT) = 1))
ORDER BY SEAT_ASSIGNMENT;

-- 14. EJZ274: RETURN PASSENGER DETAILS FOR THE MOST RECENT FLIGHT THEY TOOK 
SELECT PASS.PASSENGER_ID, EMAIL, ROUND(SYSDATE - LATEST_BOOKING_DATE) AS DAYS_SINCE_LAST_BOOKING
FROM (SELECT PASSENGER_ID, MAX(DATE_BOOKED) AS LATEST_BOOKING_DATE 
      FROM RESERVATION R JOIN PASS_RESV_FLIGHT_LINKING PRFL ON R.RESERVATION_ID = PRFL.RESERVATION_ID
      GROUP BY PASSENGER_ID) PASS JOIN PASSENGER P ON PASS.PASSENGER_ID = P.PASSENGER_ID
